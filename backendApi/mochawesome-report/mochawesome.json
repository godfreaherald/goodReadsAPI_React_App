{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-11T07:02:27.989Z",
    "end": "2020-05-11T07:02:38.502Z",
    "duration": 10513,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b16ed066-c699-4588-b4e8-5b1faf69839a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4a59ffc-7913-4518-91b2-3ba8756337ed",
          "title": "api/users",
          "fullFile": "/Users/godfrey/Documents/MYPROJECTS/JAVASCRIPT/FULLSTACK/goodReadsAPI_React_App/backendApi/test/userRoutes.test.js",
          "file": "/test/userRoutes.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "api/users \"before each\" hook",
              "timedOut": false,
              "duration": 1966,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "9dd44264-7f74-4366-ae13-99c72f05fbe8",
              "parentUUID": "c4a59ffc-7913-4518-91b2-3ba8756337ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7055350c-84f6-4814-9649-e5f3af9bb2a5",
              "title": "/signup ",
              "fullFile": "/Users/godfrey/Documents/MYPROJECTS/JAVASCRIPT/FULLSTACK/goodReadsAPI_React_App/backendApi/test/userRoutes.test.js",
              "file": "/test/userRoutes.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should register the user passed",
                  "fullTitle": "api/users /signup  should register the user passed",
                  "timedOut": false,
                  "duration": 1038,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "1603b4fa-f39b-4b59-9828-23f948df2988",
                  "parentUUID": "7055350c-84f6-4814-9649-e5f3af9bb2a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should register a user passed +return an object  with token + email",
                  "fullTitle": "api/users /signup  should register a user passed +return an object  with token + email",
                  "timedOut": false,
                  "duration": 994,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "a4450dd7-9456-4fae-9e39-139db9f431c5",
                  "parentUUID": "7055350c-84f6-4814-9649-e5f3af9bb2a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should NOT register an existing user email",
                  "fullTitle": "api/users /signup  should NOT register an existing user email",
                  "timedOut": false,
                  "duration": 1002,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "beabab50-5211-4a07-aaf5-7d80cc3ee85f",
                  "parentUUID": "7055350c-84f6-4814-9649-e5f3af9bb2a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should register a user passed + return user not confirmed",
                  "fullTitle": "api/users /signup  should register a user passed + return user not confirmed",
                  "timedOut": false,
                  "duration": 901,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c93d9699-3001-45dd-8df7-1c9424758485",
                  "parentUUID": "7055350c-84f6-4814-9649-e5f3af9bb2a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1603b4fa-f39b-4b59-9828-23f948df2988",
                "a4450dd7-9456-4fae-9e39-139db9f431c5",
                "beabab50-5211-4a07-aaf5-7d80cc3ee85f",
                "c93d9699-3001-45dd-8df7-1c9424758485"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3935,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}